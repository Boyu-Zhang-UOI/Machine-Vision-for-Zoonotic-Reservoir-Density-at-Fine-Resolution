temp
dat1
dat2
ranked
temp
gc()
temp
head(dat1)
head(dat1)
gc()
head(dat)
ranked
out
type(ranked)
class(ranked)
temp
temp$prob
ranked$house_num
unique(ranked$house_num)
ranked$pred
dat$pred
sum(is.na(dat$pred))
dat[is.na(dat$pred),]
gc()
gc()
temp
ranked
gc()
ranked$Model_Type
out
gc()
gc()
ranked$house_name
unique(ranked$house_name)
rm(list = ls(all = TRUE))
gc()
q()
n
gc()
dat$constraints
ranked$model_name
head(dat)
unique(dat$constraints)
dim(ranked)
dim(dat_base)
head(temp)
temp
unique(temp$constraints)
unique(temp$constraints)
temp$constraints
unique(temp$constraints)
unique(temp$constraints)
unique(ranked$constraints)
unique(temp$constraints)
unique(ranked$constraints)
as.string
str
as.character
unique(temp$constraints)
unique(ranked$constraints)
head(ranked)
unique(ranked$constraints)
ranked$constraints
unique(ranked$constraints)
unique(ranked$Model_Type)
unique(ranked$constraints)
unique(ranked$constraints)
unique(ranked$constraints)
ranked
unique(ranked$constraints)
head(dat_visit)
unique(ranked$test_site)
ranked[Model_Type!='TS' & house_name=='All' &
                    constraints == "Full model",]
unique(ranked$constraints)
ranked$test_site
ranked$visit
unique(ranked$visit)
unique(ranked$Model_Type)
unique(ranked$house_name)
unique(ranked$Model_Type)
site_visit
?facet_wrap
head(dat_visit)
head(ranked)
head(dat_visit)
out$labels
dim(trap.data)
dim(dat)
head(dat)
get.radius
get.radii
get.radii
get.radii(dat$feature)
ggplot(dat[feature=='Frac_bare.50' & test_site=='Bantou',], aes(x = value, y = average, group = interaction(feature, test_site))) +
    geom_line()

> ggplot(dat[feature=='Frac_bare.50' & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site)),
       color = feature) +
    geom_line()

> ggplot(dat[feature%in%c('Frac_bare.50', 'Frac_bare.100') & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site)),
       color = feature) +
    geom_line()

> ggplot(dat[feature%in%c('Frac_bare.50', 'Frac_bare.100') & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site),
       color = feature)) +
    geom_line()

> ggplot(dat[feature%in%c('Frac_bare.50', 'Frac_bare.100', 'Frac_bare.200', 'Frac_bare.500', 'Frac_bare.1000') & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site),
       color = feature)) +
    geom_line()# + geom_facet()

> dat[feature%in%c('Frac_bare.50', 'Frac_bare.100', 'Frac_bare.200', 'Frac_bare.500', 'Frac_bare.1000') & test_site=='Bantou',.(max(value))]
ggplot(dat[feature=='Frac_bare.50' & test_site=='Bantou',], aes(x = value, y = average, group = interaction(feature, test_site))) +
    geom_line()

> ggplot(dat[feature=='Frac_bare.50' & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site)),
       color = feature) +
    geom_line()

> ggplot(dat[feature%in%c('Frac_bare.50', 'Frac_bare.100') & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site)),
       color = feature) +
    geom_line()

> ggplot(dat[feature%in%c('Frac_bare.50', 'Frac_bare.100') & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site),
       color = feature)) +
    geom_line()

> ggplot(dat[feature%in%c('Frac_bare.50', 'Frac_bare.100', 'Frac_bare.200', 'Frac_bare.500', 'Frac_bare.1000') & test_site=='Bantou',],
       aes(x = value, y = average, group = interaction(feature, test_site),
       color = feature)) +
    geom_line()# + geom_facet()

> dat[feature%in%c('Frac_bare.50', 'Frac_bare.100', 'Frac_bare.200', 'Frac_bare.500', 'Frac_bare.1000') & test_site=='Bantou',.(max(value))]
head(dat)
25^2*pi
2000*0.02
dat$value
max(dat$value)
0.006935*pi*100^2
out = get.radii(dat$feature, ind = 1)
out
dat$feature
out = get.radii(dat$feature, ind = 1)
head(out)
grep('a', 'a')
grepl('a', 'a')
dat$test_site[1:10
]
var('baf')
head(dat[mask,])
head(dat)
dim(dat)
title
title('hi')
str_split
strsplit
gsub('Frac_', '', dat$base_name)
toupper
?facet_wrap
unique(dat$name)
?toupper
dat$name
head(dat[mask,])
head(dat[mask,])
)
)
rm(feature)
dat$feature
dat$name
dat$radius
dat$radius==25
sum(dat$train_site==dat$val_site)
install.packages('ggh4x')
head(dat)
mean_dat
out
unique(dat$name)
unique(dat$name)
dat
dat[mask,]
dat$type1
unique(dat$name)
dat$type1
unique(dat$name)
dat[dat$name %in% c('Moderns'),]
dat$type1
dat[mask,]
out$labels
out$labels
out$colour
out$labels
out
out
head(dat_base)
cov.wt
dat_base
out2
head(dat_base)

dat_base = dat_base[pred < 10, ]
out = ggplot(dat_base[constraints=='Spatial' & Model_Type=='Model' & test_site=='Bafodia',],
             aes(x = TS_Mn, y = pred, size = TotTraps,
                 group = interaction(test_site, Model_Type, house_num, constraints, ji))) +
    geom_point() 
out

hist(dat_base$TotTraps)
class(dat_base)
dat_base$pred
head(dat)
out
dat_base
head(dat_base)
head(dat_base)
dat_base[dat_base$Model_Type=='Model',]
dat_base[dat_base$Model_Type=='Model',train_site]
unique(dat_base[dat_base$Model_Type=='Model',train_site])
unique(dat_base[Model_Type=='Model' & test_site=='Bafodia',train_site])
dat_base[Model_Type=='Model' & test_site=='Bafodia',train_site]
rm(list = ls(all =TRUE))
gc()
max(dat_base$pred)
max(dat_base$boxi)
gc()
q()
n
head(agg_models_dat)
dim(dat)
dim(agg_models_dat)
]
dim(agg_models_dat)
dim(dat)
out
agg_models_dat
?cov.wt
cov.wt(cbind(a,b), wt = weight, cor = TRUE)$cor
min(cov.wt(cbind(a,b), wt = weight, cor = TRUE)$cor)
min(cov.wt(cbind(a,b), wt = weight, cor = TRUE)['cor'])
dat$TS_Mn
q()
n
q()
n
head(agg_models_dat)
agg_models_dat$constraints
q()
n
unique(dat$constraints)
unique(dat_base0$constraints)
unique(dat_base$constraints)
unique(dat_base1$constraints)
unique(dat_base2$constraints)
unique(dat_base3$constraints)
unique(dat$constraints)
unique(dat$constraints)
unique(dat$constraints)
unique(dat$constraints)
unique(dat$constraints)
dat[which(is.na(dat$constraints)),]
wi.na = which(is.na(dat$constraints))
dat[wi.na,]
head(agg_models_dat)
sum(dat$pred)
dat[which(is.na(pred)), ]
?wt.cor
?cov.wt
head(cor_agg_models)
agg_models_dat
q()
n
q()
n
crop.ext
crop.ext@xmin
q()
n
